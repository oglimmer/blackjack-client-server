/**
 * Blackjack Gaming Service
 * A REST API to play Blackjack. Written in C++ with oat++.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SplitResponse model module.
 * @module model/SplitResponse
 * @version 1.0
 */
class SplitResponse {
    /**
     * Constructs a new <code>SplitResponse</code>.
     * @alias module:model/SplitResponse
     */
    constructor() { 
        
        SplitResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SplitResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SplitResponse} obj Optional instance to populate.
     * @return {module:model/SplitResponse} The populated <code>SplitResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SplitResponse();

            if (data.hasOwnProperty('firstBetCard1')) {
                obj['firstBetCard1'] = ApiClient.convertToType(data['firstBetCard1'], 'String');
            }
            if (data.hasOwnProperty('firstBetCard2')) {
                obj['firstBetCard2'] = ApiClient.convertToType(data['firstBetCard2'], 'String');
            }
            if (data.hasOwnProperty('firstBetTotal')) {
                obj['firstBetTotal'] = ApiClient.convertToType(data['firstBetTotal'], 'Number');
            }
            if (data.hasOwnProperty('secondBetCard1')) {
                obj['secondBetCard1'] = ApiClient.convertToType(data['secondBetCard1'], 'String');
            }
            if (data.hasOwnProperty('secondBetCard2')) {
                obj['secondBetCard2'] = ApiClient.convertToType(data['secondBetCard2'], 'String');
            }
            if (data.hasOwnProperty('secondBetTotal')) {
                obj['secondBetTotal'] = ApiClient.convertToType(data['secondBetTotal'], 'Number');
            }
            if (data.hasOwnProperty('followActions')) {
                obj['followActions'] = ApiClient.convertToType(data['followActions'], ['String']);
            }
            if (data.hasOwnProperty('secondBetFollowAction')) {
                obj['secondBetFollowAction'] = ApiClient.convertToType(data['secondBetFollowAction'], ['String']);
            }
            if (data.hasOwnProperty('secondBetId')) {
                obj['secondBetId'] = ApiClient.convertToType(data['secondBetId'], 'Number');
            }
        }
        return obj;
    }


}

/**
 * @member {String} firstBetCard1
 */
SplitResponse.prototype['firstBetCard1'] = undefined;

/**
 * @member {String} firstBetCard2
 */
SplitResponse.prototype['firstBetCard2'] = undefined;

/**
 * @member {Number} firstBetTotal
 */
SplitResponse.prototype['firstBetTotal'] = undefined;

/**
 * @member {String} secondBetCard1
 */
SplitResponse.prototype['secondBetCard1'] = undefined;

/**
 * @member {String} secondBetCard2
 */
SplitResponse.prototype['secondBetCard2'] = undefined;

/**
 * @member {Number} secondBetTotal
 */
SplitResponse.prototype['secondBetTotal'] = undefined;

/**
 * @member {Array.<String>} followActions
 */
SplitResponse.prototype['followActions'] = undefined;

/**
 * @member {Array.<String>} secondBetFollowAction
 */
SplitResponse.prototype['secondBetFollowAction'] = undefined;

/**
 * @member {Number} secondBetId
 */
SplitResponse.prototype['secondBetId'] = undefined;






export default SplitResponse;

